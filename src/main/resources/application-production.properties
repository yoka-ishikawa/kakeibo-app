# ===================================================================
# 家計簿アプリケーション - 本番環境設定
# Renderプラットフォーム用の環境変数フォールバック設定
# ===================================================================
spring.application.name=webapp

# データベース設定（環境変数フォールバック付き）
# 本番: PostgreSQL (Supabase)、フォールバック: H2インメモリ
spring.datasource.url=${DATABASE_URL:jdbc:h2:mem:proddb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE}
spring.datasource.driver-class-name=${DB_DRIVER:org.h2.Driver}
spring.datasource.username=${DB_USERNAME:sa}
spring.datasource.password=${DB_PASSWORD:password}

# JPA/Hibernate設定
# 本番: PostgreSQL、フォールバック: H2
spring.jpa.database-platform=${JPA_DIALECT:org.hibernate.dialect.H2Dialect}
# update: 既存データを保持しながらスキーマ更新
spring.jpa.hibernate.ddl-auto=update
# 本番ではSQLログを無効化
spring.jpa.show-sql=false

# データベース初期化
spring.sql.init.mode=always

# ログ設定（本番環境用）
# デバッグ情報を含むが、性能を考慮してレベルを調整
logging.level.root=INFO
logging.level.com.mycompany.webapp=DEBUG
logging.level.org.springframework.web=INFO
logging.level.org.hibernate=WARN
logging.level.org.springframework.boot=INFO

# エラーハンドリング設定
# 本番環境でもデバッグ用にエラー詳細を表示
server.error.include-message=always
server.error.include-binding-errors=always

# 静的リソース配信設定
spring.web.resources.static-locations=classpath:/static/

# サーバー設定
# Renderプラットフォームの環境変数PORTを使用
server.port=${PORT:8080}

# CORS設定（クロスオリジンリクエスト許可）
# 開発用に全オリジンを許可（本番では制限を検討）
spring.web.cors.allowed-origins=*
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*