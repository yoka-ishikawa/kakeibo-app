# ===================================================================
# 家計簿アプリケーション - 本番環境設定（緊急対応版）
# Render PostgreSQL接続問題対応版
# ===================================================================
spring.application.name=webapp

# データベース設定（Render PostgreSQL - 緊急対応版）
# 接続エラー対応のため、複数の接続オプションを追加
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://dpg-d12hm7je5dus7396aujg-a.singapore-postgres.render.com:5432/tb_info_kanri?sslmode=require&connectTimeout=60&socketTimeout=60&tcpKeepAlive=true&ApplicationName=kakeibo-app}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=${DB_USERNAME:tb_info_kanri_user}
spring.datasource.password=${DB_PASSWORD}

# PostgreSQL接続の詳細設定（緊急対応強化版）
spring.datasource.hikari.connection-test-query=SELECT 1
spring.datasource.hikari.test-while-idle=true
spring.datasource.hikari.test-on-borrow=true
spring.datasource.hikari.test-on-return=false

# 接続プール設定（緊急対応版 - より保守的な設定）
spring.datasource.hikari.maximum-pool-size=3
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.connection-timeout=180000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=900000
spring.datasource.hikari.validation-timeout=60000
spring.datasource.hikari.leak-detection-threshold=180000
spring.datasource.hikari.initialization-fail-timeout=30000

# SSL/TLS接続設定（Render PostgreSQL対応）
spring.datasource.hikari.data-source-properties.sslmode=require
spring.datasource.hikari.data-source-properties.sslcert=
spring.datasource.hikari.data-source-properties.sslkey=
spring.datasource.hikari.data-source-properties.sslrootcert=
spring.datasource.hikari.data-source-properties.connectTimeout=60
spring.datasource.hikari.data-source-properties.socketTimeout=60
spring.datasource.hikari.data-source-properties.tcpKeepAlive=true
spring.datasource.hikari.data-source-properties.ApplicationName=kakeibo-app

# JPA/Hibernate設定
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.time_zone=Asia/Tokyo

# データベース初期化
spring.sql.init.mode=never
spring.sql.init.continue-on-error=true

# アプリケーション設定
server.port=${PORT:8080}
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true
server.servlet.encoding.force=true

# ログ設定（接続診断用）
logging.level.root=INFO
logging.level.com.mycompany.webapp=DEBUG
logging.level.org.springframework.jdbc=DEBUG
logging.level.com.zaxxer.hikari=DEBUG
logging.level.org.postgresql=DEBUG

# 接続失敗時の再試行設定（Spring Boot用）
spring.datasource.continue-on-error=true
spring.jpa.properties.hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_RELEASE_AFTER_TRANSACTION
